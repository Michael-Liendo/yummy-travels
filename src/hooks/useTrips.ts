import { useState } from "react";
import { apiFetch } from "../api/config";

// Generated by https://quicktype.io

export interface Trip {
  _id: string;
  type: string;
  price: number;
  description: string;
  city: string;
  destination: string;
  date: string;
  time: string;
  arrivalDate: string;
  startHour: string;
  arrivalHour: string;
  seats: number;
  availableSeats: number;
}

type TripQuery = {
  availableSeats: number;
  city: string;
  destination: string;
  date: string;
};
const useTrips = () => {
  const [trips, setTrips] = useState<Trip[]>([]);
  const getAll = async ({ availableSeats, city, destination }: TripQuery) => {
    const response = await apiFetch("/trips", {
      headers: {
        Authorization: `Bearer ${localStorage.getItem("token")}`,
      },
      params: {
        availableSeats,
        city,
        destination,
      },
    });
    setTrips(response.data.results);
  };

  const getBusesTrips = () => {
    return trips.filter((trip: any) => trip.type === "bus");
  };

  const getairplanesTrips = () => {
    return trips.filter((trip: any) => trip.type === "flight");
  };

  const getCarsTrips = () => {
    return trips.filter((trip: any) => trip.type === "ship");
  };

  const calculeMinorPrice = (items: any) => {
    return items.reduce((acc: any, curr: any) => {
      return curr.price < acc.price ? curr : acc;
    });
  };

  return {
    data: trips,
    getAll,
    getBusesTrips,
    getairplanesTrips,
    getCarsTrips,
    calculeMinorPrice,
  };
};

export { useTrips };
