import { useEffect, useState } from "react";
import { apiFetch } from "../api/config";

// Generated by https://quicktype.io

export interface Trip {
  _id: string;
  type: string;
  price: number;
  description: string;
  city: string;
  destination: string;
  date: string;
  time: string;
  arrivalDate: string;
  startHour: string;
  arrivalHour: string;
  seats: number;
  availableSeats: number;
}

export const useTickets = () => {
  const [tickets, setTickets] = useState<Trip[]>([]);
  const [loading, setLoading] = useState(false);

  const getAll = async () => {
    const response = await apiFetch.get("/tickets");
    const mapped = response.data.results.filter(
      (result: any) => result?.trip?.type
    );
    setTickets(mapped);
    return response.data.results;
  };

  useEffect(() => {
    try {
      setLoading(true);
      getAll();
    } catch (error) {
      console.log(error);
    } finally {
      setLoading(false);
    }
  }, []);

  const getBusesTrips = () => {
    return tickets.length > 0
      ? tickets.filter((trip: Trip) => trip.type === "bus")
      : undefined;
  };

  const getairplanesTrips = () => {
    return tickets.length > 0
      ? tickets.filter((trip: Trip) => trip.type === "flight")
      : undefined;
  };

  const getCarsTrips = () => {
    return tickets.length > 0
      ? tickets.filter((trip: Trip) => trip.type === "ship")
      : undefined;
  };

  const calculeMinorPrice = (items: Trip[]) => {
    return items.reduce((acc: Trip, curr: Trip) => {
      return curr.price < acc.price ? curr : acc;
    });
  };

  return {
    data: tickets,
    getAll,
    loading,
    getBusesTrips,
    getairplanesTrips,
    getCarsTrips,
    calculeMinorPrice,
  };
};
